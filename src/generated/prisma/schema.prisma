generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model budgets {
  budget_id    Int            @id @default(autoincrement())
  user_id      Int
  name         String         @db.VarChar(255)
  amount       Decimal        @db.Decimal(10, 2)
  start_date   DateTime?      @db.Date
  end_date     DateTime?      @db.Date
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  users        users          @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_budgets")
  transactions transactions[]

  @@unique([user_id, name], map: "unique_user_budget_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model categories {
  category_id  Int            @id @default(autoincrement())
  user_id      Int
  name         String         @db.VarChar(255)
  type         String?        @db.VarChar(50)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  users        users          @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
  transactions transactions[]
}

model transactions {
  transaction_id   Int        @id @default(autoincrement())
  user_id          Int
  category_id      Int
  amount           Decimal    @db.Decimal(10, 2)
  description      String?
  transaction_date DateTime?  @db.Date
  created_at       DateTime?  @default(now()) @db.Timestamp(6)
  updated_at       DateTime?  @default(now()) @db.Timestamp(6)
  budget_id        Int?
  budgets          budgets?   @relation(fields: [budget_id], references: [budget_id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_budget_fk")
  categories       categories @relation(fields: [category_id], references: [category_id], onDelete: Cascade, onUpdate: NoAction, map: "transactions_category_fk")
  users            users      @relation(fields: [user_id], references: [userid], onDelete: Cascade, onUpdate: NoAction, map: "transactions_user_fk")
}

model users {
  userid       Int            @id @default(autoincrement())
  email        String         @unique @db.VarChar(255)
  password     String         @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  name         String?        @db.VarChar(255)
  budgets      budgets[]
  categories   categories[]
  transactions transactions[]
}
